Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLDT_Menu_BuildSettings();
//LLDT_Menu_Add_Point(_Player, "Attribute");
//LLDT_Menu_Add_Point(_Player, "Ability");
//LLDT_Menu_Add_Point(_Player, "Civil");
//LLDT_Menu_Add_Point(_Player, "Talent");
//LLDT_Menu_Add_Point(_Player, "Source");
//LLDT_Menu_Add_Point(_Player, "SourceMax");
KBSECTION
//REGION RESET
PROC
LLDT_Menu_ResetCommands((CHARACTERGUID)_Player)
AND
DB_LLDT_CommandFlags(_Flag)
THEN
ObjectClearFlag(_Player, _Flag);

/*
PROC
LLDT_Menu_ResetPartyCommands((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LLDT_PartyCommandFlags(_Flag)
THEN
PartyClearFlag(_Player, _Flag, _Instance);
*/
//END_REGION

//REGION BUILD_SETTINGS
PROC
LLDT_Menu_BuildSettings()
THEN
SysClear("DB_LLDT_Skills_All", 1);
DB_LLDT_Skills_All("Shout_LLDT_OpenMenu");
DB_LLDT_Skills_All("Target_LLDT_GenerateTradeTreasure");
DB_LLDT_Skills_All("Target_LLDT_ClearTradeTreasure");
DB_LLDT_Skills_All("Target_LLDT_ClearItems");
DB_LLDT_Skills_All("Target_LLDT_GenGold");
DB_LLDT_Skills_All("Target_LLDT_LevelUp");
DB_LLDT_Skills_All("Shout_LLDT_LevelUpParty");
DB_LLDT_Skills_All("Target_LLDT_TeleportSelf");
DB_LLDT_Skills_All("Target_LLDT_TeleportParty");
DB_LLDT_Skills_All("Teleportation_LLDT_TeleportTarget");

SysClear("DB_LLDT_Skills_Essentials", 1);
DB_LLDT_Skills_Essentials("Shout_LLDT_OpenMenu");
DB_LLDT_Skills_Essentials("Target_LLDT_GenGold");
DB_LLDT_Skills_Essentials("Target_LLDT_LevelUp");
DB_LLDT_Skills_Essentials("Shout_LLDT_LevelUpParty");
DB_LLDT_Skills_Essentials("Target_LLDT_TeleportSelf");
DB_LLDT_Skills_Essentials("Target_LLDT_TeleportParty");
DB_LLDT_Skills_Essentials("Teleportation_LLDT_TeleportTarget");

SysClear("DB_LLDT_Skills_Treasure", 1);
DB_LLDT_Skills_Treasure("Shout_LLDT_OpenMenu");
DB_LLDT_Skills_Treasure("Target_LLDT_GenerateTradeTreasure");
DB_LLDT_Skills_Treasure("Target_LLDT_ClearTradeTreasure");
DB_LLDT_Skills_Treasure("Target_LLDT_ClearItems");
DB_LLDT_Skills_Treasure("Target_LLDT_GenGold");

SysClear("DB_LLDT_CommandFlags", 1);
DB_LLDT_CommandFlags("LLDT_ADD_ATTRIBUTE");
DB_LLDT_CommandFlags("LLDT_ADD_ABILITY");
DB_LLDT_CommandFlags("LLDT_ADD_CIVIL");
DB_LLDT_CommandFlags("LLDT_ADD_TALENT");
DB_LLDT_CommandFlags("LLDT_ADD_SOURCE");
DB_LLDT_CommandFlags("LLDT_ADD_ALL");
DB_LLDT_CommandFlags("LLDT_ADD_SKILLS_MENU");
DB_LLDT_CommandFlags("LLDT_ADD_SKILLS_ESSENTIALS");
DB_LLDT_CommandFlags("LLDT_ADD_SKILLS_TREASURE");
DB_LLDT_CommandFlags("LLDT_ADD_SKILLS");
DB_LLDT_CommandFlags("LLDT_ADD_SKILLS");
DB_LLDT_CommandFlags("LLDT_REMOVE_SKILLS");
DB_LLDT_CommandFlags("LLDT_REMOVE_SKILLS");
DB_LLDT_CommandFlags("LLDT_REMOVE_COLLAR_PARTY");
DB_LLDT_CommandFlags("LLDT_RESURRECT_PARTY");
DB_LLDT_CommandFlags("LLDT_FULLHEAL_PARTY");

//Waypoints not registered normally, unless the level is started
SysClear("DB_LLDT_WaypointInfo", 3);
//FTJ
DB_LLDT_WaypointInfo((ITEMGUID)ITEMGUID_S_FTJ_BeachStatue_465c7929-cc0f-4f58-8c2c-24d3e65e2fb0, (TRIGGERGUID)TRIGGERGUID_S_FTJ_BeachStatue_Point_c75522f4-7b83-445d-8ccd-8f908eb3673d,"WAYP_FTJ_BeachStatue");
DB_LLDT_WaypointInfo(ITEMGUID_S_FTJ_ShrineToTheSeven_a7c71478-416b-4b7a-bd97-446f03708443,TRIGGERGUID_S_FTJ_OlgoHatchUp_Point_25f36d64-1291-497e-8686-063e1aec04f8,"WAYP_FTJ_ShrineToTheSeven");
DB_LLDT_WaypointInfo(ITEMGUID_S_FTJ_UnderGroundShrine_fceee19d-145c-8a40-28fb-536fab281adc,TRIGGERGUID_S_FTJ_UndergroundShrine_Point_6985ff34-4bc6-4525-9611-afbe99b99557,"WAYP_FTJ_UndergroundShrine");
DB_LLDT_WaypointInfo(ITEMGUID_S_FTJ_SW_GateShrine_487f7035-69a4-45f7-82e3-0e33a3fd00b8,TRIGGERGUID_S_FTJ_SW_GateShrine_Point_d708e577-f258-46cf-b0d4-e887e0d262c2,"WAYP_FTJ_SW_GateShrine");
DB_LLDT_WaypointInfo(ITEMGUID_S_WAYP_FTJ_SW_Armory_bdfe2897-def1-437f-960c-042daab1f967, TRIGGERGUID_S_WAYP_FTJ_SW_Armory_Trigger_a048888a-efa3-4f4c-b627-e82b5f51b601, "WAYP_FTJ_SW_Armory");
DB_LLDT_WaypointInfo(ITEMGUID_S_WAYP_FTJ_SW_FinalBattle_a9573466-3109-4be8-8fd0-a08db0993387, TRIGGERGUID_S_WAYP_FTJ_SW_FinalBattle_Trigger_030a12f7-ff8f-400e-bc54-dcad3c787885, "WAYP_FTJ_SW_FinalBattle");
DB_LLDT_WaypointInfo(ITEMGUID_S_WAYP_FTJ_SW_FrozenBeach_ff4aebd1-952f-4513-8231-f30eb2663d03, TRIGGERGUID_S_WAYP_FTJ_SW_FrozenBeach_Trigger_838eb43f-19ed-4966-ba1a-e247e0a61218, "WAYP_FTJ_SW_FrozenBeach");
//CoS
DB_LLDT_WaypointInfo((ITEMGUID)ITEMGUID_S_CoS_Temples_Waypoint_Beach_d3e51c58-9361-4d78-b967-9061e2b60e7e,(TRIGGERGUID)TRIGGERGUID_S_CoS_Temples_Waypoint_Beach_Point_0739766c-729b-45ec-870e-607a2e9da8c5,"WAYP_CoS_Temples_Beach");
DB_LLDT_WaypointInfo((ITEMGUID)ITEMGUID_S_CoS_Temples_Waypoint_Elf_c32b2004-2f1c-446e-a23c-a1d8f6705922,(TRIGGERGUID)TRIGGERGUID_S_CoS_Temples_Waypoint_ElfTemple_b356750d-f4a8-4040-96e0-84b9d71e8fc9,"WAYP_CoS_Temples_ElfTemple");
DB_LLDT_WaypointInfo((ITEMGUID)ITEMGUID_S_CoS_Temples_Waypoint_Human_892e7e94-75b5-44d2-bc6f-1f735f7c8965,(TRIGGERGUID)TRIGGERGUID_S_CoS_Temples_Waypoint_Human_Point_416c1174-9826-4dc5-bcd9-933387a58f6a,"WAYP_CoS_Temples_Human");
DB_LLDT_WaypointInfo((ITEMGUID)ITEMGUID_S_CoS_Temples_Waypoint_LunarPuzzle_7a7da96f-5e96-4800-85a7-5a54594d6e81,(TRIGGERGUID)TRIGGERGUID_S_CoS_Temples_Waypoint_LunarPuzzle_Point_672a0928-094d-4982-b542-3fc1c3faa8d3,"WAYP_CoS_Temples_LunarPuzzle");
DB_LLDT_WaypointInfo((ITEMGUID)ITEMGUID_S_CoS_Academy_Waypoint_Central_2db50e45-a3f7-4f6f-bcef-d99df60617a0,(TRIGGERGUID)TRIGGERGUID_S_CoS_Academy_Waypoint_Central_Point_e28abb66-7361-4cb2-ae6e-eea182b05b46,"WAYP_CoS_Academy_Central");
DB_LLDT_WaypointInfo((ITEMGUID)ITEMGUID_S_CoS_Temples_Waypoint_Wizard_d089a9bd-9f20-4710-826f-f3a719039861,(TRIGGERGUID)TRIGGERGUID_S_CoS_Temples_Waypoint_Wizard_Point_8908a5de-cbf1-4e8a-b272-56896fd670b1,"WAYP_CoS_Temples_Wizard");
DB_LLDT_WaypointInfo((ITEMGUID)ITEMGUID_S_CoS_Temples_Waypoint_Imp_0f989a2f-6a3e-4123-be34-c84c4fe17744,(TRIGGERGUID)TRIGGERGUID_S_CoS_Temples_Waypoint_Imp_Point_2cb11394-785b-47ef-bdf9-f8c9134dde06,"WAYP_CoS_Temples_Imp");

SysClear("DB_LLDT_WaypointRegion", 2);
DB_LLDT_WaypointRegion("_FTJ_", "FJ_FortJoy_Main");
DB_LLDT_WaypointRegion("_RC_", "RC_Main");
DB_LLDT_WaypointRegion("_CoS_", "CoS_Main");
DB_LLDT_WaypointRegion("_ARX_", "Arx_Main");
//END_REGION

//REGION POINTS
PROC
LLDT_Menu_Add_Point((CHARACTERGUID)_Player, "Attribute")
AND
CharacterGetAttributePoints(_Player, _CurrentPoints)
AND
IntegerSum(_CurrentPoints, 1, _Points)
AND
IntegertoString(_Points, _PointsStr)
THEN
CharacterAddAttributePoint(_Player, 1);
LLDT_Print(_Player, "<font color='#F5DA81'> +1 Attribute Point</font> (<font color='#00FF00'>", _PointsStr, "</font>)</font>");

PROC
LLDT_Menu_Add_Point((CHARACTERGUID)_Player, "Ability")
AND
CharacterGetAbilityPoints(_Player, _CurrentPoints)
AND
IntegerSum(_CurrentPoints, 1, _Points)
AND
IntegertoString(_Points, _PointsStr)
THEN
CharacterAddAbilityPoint(_Player, 1);
LLDT_Print(_Player, "<font color='#F6CED8'> +1 Ability Point</font> (<font color='#00FF00'>", _PointsStr, "</font>)</font>");

PROC
LLDT_Menu_Add_Point((CHARACTERGUID)_Player, "Civil")
AND
CharacterGetCivilAbilityPoints(_Player, _CurrentPoints)
AND
IntegerSum(_CurrentPoints, 1, _Points)
AND
IntegertoString(_Points, _PointsStr)
THEN
CharacterAddCivilAbilityPoint(_Player, 1);
LLDT_Print(_Player, "<font color='#DA81F5'> +1 Civil Point (<font color='#00FF00'>", _PointsStr, "</font>)</font>");

PROC
LLDT_Menu_Add_Point((CHARACTERGUID)_Player, "Talent")
AND
CharacterGetTalentPoints(_Player, _CurrentPoints)
AND
IntegerSum(_CurrentPoints, 1, _Points)
AND
IntegertoString(_Points, _PointsStr)
THEN
CharacterAddTalentPoint(_Player, 1);
LLDT_Print(_Player, "<font color='#F5D0A9'> +1 Talent Point (<font color='#00FF00'>", _PointsStr, "</font>)</font>");

PROC
LLDT_Menu_Add_Point((CHARACTERGUID)_Player, "All")
THEN
CharacterAddAttributePoint(_Player, 1);
CharacterAddAbilityPoint(_Player, 1);
CharacterAddCivilAbilityPoint(_Player, 1);
CharacterAddTalentPoint(_Player, 1);
LLDT_Print(_Player, "<font color='#D8F6CE'>+1 Attribute, Ability, Civil, and Talent Points</font>");

PROC
LLDT_Menu_Add_Point((CHARACTERGUID)_Player, "Source")
AND
CharacterGetSourcePoints(_Player, _CurrentPoints)
AND
IntegerSum(_CurrentPoints, 1, _Points)
AND
IntegertoString(_Points, _PointsStr)
THEN
CharacterAddSourcePoints(_Player, 1);
LLDT_Print(_Player, "<font color='#81F7F3'> +1 Source Point (<font color='#00FF00'>", _PointsStr, "</font>)</font>");
PlayEffect(_Player, "RS3_FX_GP_ScriptedEvent_Source_Absorb_01");

PROC
LLDT_Menu_Add_Point((CHARACTERGUID)_Player, "SourceMax")
AND
CharacterGetMaxSourcePoints(_Player, _Max)
AND
IntegerSum(_Max, 1, _NewMax)
AND
IntegertoString(_NewMax, _NewMaxStr)
THEN
CharacterOverrideMaxSourcePoints(_Player, _NewMax);
LLDT_Print(_Player, "<font color='#BE81F7'> +1 Max Source Points (<font color='#00FF00'>", _NewMaxStr, "</font>)</font>");

IF
ObjectFlagSet("LLDT_ADD_ATTRIBUTE", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_ATTRIBUTE")
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 0)
THEN
LLDT_Menu_Add_Point(_Player, "Attribute");

IF
ObjectFlagSet("LLDT_ADD_ABILITY", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_ABILITY")
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 0)
THEN
LLDT_Menu_Add_Point(_Player, "Ability");

IF
ObjectFlagSet("LLDT_ADD_CIVIL", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_CIVIL")
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 0)
THEN
LLDT_Menu_Add_Point(_Player, "Civil");

IF
ObjectFlagSet("LLDT_ADD_TALENT", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_TALENT")
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 0)
THEN
LLDT_Menu_Add_Point(_Player, "Talent");

IF
ObjectFlagSet("LLDT_ADD_ALL", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_ALL")
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 0)
THEN
LLDT_Menu_Add_Point(_Player, "All");

IF
ObjectFlagSet("LLDT_ADD_SOURCE", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_SOURCE")
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 0)
THEN
LLDT_Menu_Add_Point(_Player, "Source");

IF
ObjectFlagSet("LLDT_ADD_SOURCE_MAX", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_SOURCE_MAX")
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 0)
THEN
LLDT_Menu_Add_Point(_Player, "SourceMax");

IF
ObjectFlagSet("LLDT_REMOVE_SOURCE_MAX", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_REMOVE_SOURCE_MAX")
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 0)
THEN
SetStoryEvent(_Player, "LLDT_Commands_LowerSourceMax");

IF
ObjectFlagSet("LLDT_ADD_ATTRIBUTE", (CHARACTERGUID)_Speaker, _Instance)
AND
ObjectGetFlag(_Speaker, "LLDT_PointsMode_Party", 1)
THEN
IterateParty(_Speaker, "LLDT_Commands_AddAttributePoint");

IF
ObjectFlagSet("LLDT_ADD_ABILITY", (CHARACTERGUID)_Speaker, _Instance)
AND
ObjectGetFlag(_Speaker, "LLDT_PointsMode_Party", 1)
THEN
IterateParty(_Speaker, "LLDT_Commands_AddAbilityPoint");

IF
ObjectFlagSet("LLDT_ADD_CIVIL", (CHARACTERGUID)_Speaker, _Instance)
AND
ObjectGetFlag(_Speaker, "LLDT_PointsMode_Party", 1)
THEN
IterateParty(_Speaker, "LLDT_Commands_AddCivilPoint");

IF
ObjectFlagSet("LLDT_ADD_TALENT", (CHARACTERGUID)_Speaker, _Instance)
AND
ObjectGetFlag(_Speaker, "LLDT_PointsMode_Party", 1)
THEN
IterateParty(_Speaker, "LLDT_Commands_AddTalentPoint");

IF
ObjectFlagSet("LLDT_ADD_ALL", (CHARACTERGUID)_Speaker, _Instance)
AND
ObjectGetFlag(_Speaker, "LLDT_PointsMode_Party", 1)
THEN
IterateParty(_Speaker, "LLDT_Commands_AddAllPoints");

IF
ObjectFlagSet("LLDT_ADD_SOURCE", (CHARACTERGUID)_Speaker, _Instance)
AND
ObjectGetFlag(_Speaker, "LLDT_PointsMode_Party", 1)
THEN
IterateParty(_Speaker, "LLDT_Commands_AddSourcePoint");

IF
ObjectFlagSet("LLDT_ADD_SOURCE_MAX", (CHARACTERGUID)_Speaker, _Instance)
AND
ObjectGetFlag(_Speaker, "LLDT_PointsMode_Party", 1)
THEN
IterateParty(_Speaker, "LLDT_Commands_RaiseSourceMax");

IF
ObjectFlagSet("LLDT_REMOVE_SOURCE_MAX", (CHARACTERGUID)_Speaker, _Instance)
AND
ObjectGetFlag(_Speaker, "LLDT_PointsMode_Party", 1)
THEN
IterateParty(_Speaker, "LLDT_Commands_LowerSourceMax");

IF
StoryEvent((CHARACTERGUID)_Player, "LLDT_Commands_AddAttributePoint")
THEN
LLDT_Menu_Add_Point(_Player, "Attribute");

IF
StoryEvent((CHARACTERGUID)_Player, "LLDT_Commands_AddAbilityPoint")
THEN
LLDT_Menu_Add_Point(_Player, "Ability");

IF
StoryEvent((CHARACTERGUID)_Player, "LLDT_Commands_AddCivilPoint")
THEN
LLDT_Menu_Add_Point(_Player, "Civil");

IF
StoryEvent((CHARACTERGUID)_Player, "LLDT_Commands_AddTalentPoint")
THEN
LLDT_Menu_Add_Point(_Player, "Talent");

IF
StoryEvent((CHARACTERGUID)_Player, "LLDT_Commands_AddAllPoints")
THEN
LLDT_Menu_Add_Point(_Player, "All");

IF
StoryEvent((CHARACTERGUID)_Player, "LLDT_Commands_AddSourcePoint")
THEN
LLDT_Menu_Add_Point(_Player, "Source");

IF
StoryEvent((CHARACTERGUID)_Player, "LLDT_Commands_RaiseSourceMax")
THEN
LLDT_Menu_Add_Point(_Player, "SourceMax");

IF
StoryEvent((CHARACTERGUID)_Player, "LLDT_Commands_LowerSourceMax")
AND
CharacterGetMaxSourcePoints(_Player, _Max)
AND
IntegerSubtract(_Max, 1, _NewMax)
AND
_NewMax >= 0
AND
IntegertoString(_NewMax, _MaxStr)
THEN
CharacterOverrideMaxSourcePoints(_Player, _NewMax);
LLDT_Print(_Player, "<font color='#FE2E2E'>-1 Max Source Points (<font color='#00FF00'>", _MaxStr, "</font>)</font>");
//END_REGION

//REGION DISPLAY_FLAGS
/*
IF
ObjectFlagSet(_Flag, (CHARACTERGUID)_Player, _Instance)
AND
ObjectGetFlag(_Player, "LLDT_LOG_DISPLAYFLAGS", 1)
AND
ObjectGetFlag(_Player, _Flag, _Val)
THEN
LLDT_LogFlag(_Player, _Flag, _Val);

IF
ObjectFlagCleared(_Flag, (CHARACTERGUID)_Player, _Instance)
AND
ObjectGetFlag(_Player, "LLDT_LOG_DISPLAYFLAGS", 1)
AND
ObjectGetFlag(_Player, _Flag, _Val)
THEN
LLDT_LogFlag(_Player, _Flag, _Val);

IF
ObjectFlagSet(_Flag, (CHARACTERGUID)_Player, _Instance)
AND
ObjectGetFlag(_Player, "LLDT_LOG_PRINTFLAGS", 1)
AND
ObjectGetFlag(_Player, _Flag, _Val)
THEN
LLDT_PrintFlag(_Player, _Flag, _Val);

IF
ObjectFlagCleared(_Flag, (CHARACTERGUID)_Player, _Instance)
AND
ObjectGetFlag(_Player, "LLDT_LOG_PRINTFLAGS", 1)
AND
ObjectGetFlag(_Player, _Flag, _Val)
THEN
LLDT_PrintFlag(_Player, _Flag, _Val);
*/
//END_REGION

//REGION LOG_SETTINGS
IF
ObjectFlagSet("LLDT_LOG_ENABLED", (CHARACTERGUID)_Player, _Instance)
THEN
SetVarFixedString(_Player, "LLDebugTools_LogText", "Log Enabled");
SetStoryEvent(_Player, "LLDT_Event_PlayerDebugLog");
//END_REGION

//REGION SKILLS
IF
ObjectFlagSet("LLDT_ADD_SKILLS_MENU", (CHARACTERGUID)_Player, _Instance)
AND
CharacterHasSkill(_Player, "Shout_LLDT_OpenMenu", 0)
THEN
CharacterAddSkill(_Player, "Shout_LLDT_OpenMenu");
ObjectClearFlag(_Player, "LLDT_ADD_SKILLS_MENU");
LLDT_Print(_Player, "[DT] Added skill Shout_LLDT_OpenMenu");

IF
ObjectFlagSet("LLDT_ADD_SKILLS_ESSENTIALS", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_SKILLS_ESSENTIALS")
AND
DB_LLDT_Skills_Essentials(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 0)
THEN
CharacterAddSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Added skill ", _Skill);

IF
ObjectFlagSet("LLDT_ADD_SKILLS_TREASURE", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_SKILLS_TREASURE")
AND
DB_LLDT_Skills_Treasure(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 0)
THEN
CharacterAddSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Added skill ", _Skill);

IF
ObjectFlagSet("LLDT_ADD_SKILLS", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_SKILLS")
AND
DB_LLDT_Skills_All(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 0)
THEN
CharacterAddSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Added skill ", _Skill);

IF
ObjectFlagSet("LLDT_ADD_SKILLS", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearFlag(_Speaker, "LLDT_ADD_SKILLS")
AND
DB_IsPlayer(_Player)
AND
DB_LLDT_Skills_All(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 0)
THEN
CharacterAddSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Added skill ", _Skill);

IF
ObjectFlagSet("LLDT_REMOVE_SKILLS", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_REMOVE_SKILLS")
AND
DB_LLDT_Skills_All(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 1)
THEN
CharacterRemoveSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Removed skill ", _Skill);

IF
ObjectFlagSet("LLDT_REMOVE_SKILLS", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearPartyFlag(_Speaker, "LLDT_REMOVE_SKILLS", _Instance)
AND
DB_IsPlayer(_Player)
AND
DB_LLDT_Skills_All(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 1)
THEN
CharacterRemoveSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Removed skill ", _Skill);

//END_REGION

//REGION WAYPOINTS
PROC
LLDT_Menu_UnlockAllWaypoints((CHARACTERGUID)_Player)
AND
DB_LLDT_WaypointInfo(_Item, _Trigger, _CurrentWP)
AND
ObjectExists(_Trigger, 1)
THEN
RegisterWaypoint(_CurrentWP, _Item);
UnlockWaypoint(_CurrentWP, _Trigger, _Player);

PROC
LLDT_Menu_UnlockAllWaypoints((CHARACTERGUID)_Player)
AND
DB_WaypointInfo(_Item,_Trigger,_CurrentWP)
AND
ObjectExists(_Trigger, 1)
THEN
RegisterWaypoint(_CurrentWP, _Item);
UnlockWaypoint(_CurrentWP, _Trigger, _Player);
ObjectSetFlag(_Player, "LLDT_WaypointsUnlocked");

PROC
LLDT_Menu_UnlockAllWaypoints((CHARACTERGUID)_Player)
THEN
//2: the button is visible, enabled, and flashes to indicate a new waypoint is available
SetHomesteadKeyState(2, _Player);
SysClear("DB_HomesteadKeyState", 2);
DB_HomesteadKeyState(_Player, 2);
PROC_UnblockWaypointUsage(_Player);

IF
ObjectFlagSet("LLDT_ADD_WAYPOINTS", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_WAYPOINTS")
AND
LLDT_QRY_Print(_Player, "All waypoints unlocked")
THEN
LLDT_Menu_UnlockAllWaypoints(_Player);

IF
CharacterTeleportToWaypoint(_Player, _Trigger)
AND
ObjectGetFlag(_Player, "LLDT_WaypointsUnlocked", 1)
AND
DB_WaypointInfo(_Item,_Trigger,_CurrentWP)
AND
LLDT_WaypointTravel_QRY_RegionMismatch(_CurrentWP)
THEN
CharacterTeleportPartiesToTrigger(_Trigger, "");

IF
CharacterTeleportToWaypoint(_Player, _Trigger)
AND
ObjectGetFlag(_Player, "LLDT_WaypointsUnlocked", 1)
AND
DB_LLDT_WaypointInfo(_Item, _Trigger, _CurrentWP)
AND
LLDT_WaypointTravel_QRY_RegionMismatch(_CurrentWP)
THEN
CharacterTeleportPartiesToTrigger(_Trigger, "");

QRY
LLDT_WaypointTravel_QRY_RegionMismatch((STRING)_WaypointID)
AND
DB_CurrentLevel(_CurrentRegion)
AND
DB_LLDT_WaypointRegion(_Keyword, _Region)
AND
StringContains(_WaypointID, _Keyword, 1)
AND
_CurrentRegion != _Region
THEN
DB_NOOP(1);
//END_REGION

//REGION IMMORTALITY
IF
ObjectFlagSet("LLDT_IMMORTALITY_ENABLED", (CHARACTERGUID)_Player, _Instance)
THEN
LLDT_Helpers_SetTag(_Player, "DEATHFOG_IMMUNE");
LLDT_Helpers_SetTag(_Player, "CHICKENTOUCH_IMMUNE");
CharacterSetImmortal(_Player, 1);
ProcSetInvulnerable(_Player, 1);
DisplayText(_Player, "<font color='#A52A2A' size='30'>There can only be ONE!</font>");
PlayAnimation(_Player, "", "");
PlayAnimation(_Player, "skill_cast_shout_01_cast", "");

IF
ObjectFlagCleared("LLDT_IMMORTALITY_ENABLED", (CHARACTERGUID)_Player, _Instance)
THEN
LLDT_Helpers_ResetTag(_Player, "DEATHFOG_IMMUNE");
LLDT_Helpers_ResetTag(_Player, "CHICKENTOUCH_IMMUNE");
CharacterSetImmortal(_Player, 0);
ProcSetInvulnerable(_Player, 0);
DisplayText(_Player, "<font size='26'>I'm... <font color='#FFFF00' size='13'>mortal</font>...</font>");
PlayAnimation(_Player, "", "");
PlayAnimation(_Player, "emotion_sad", "");

//END_REGION

//REGION QUICK_COMMANDS
IF
ObjectFlagSet("LLDT_REMOVE_COLLAR_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearFlag(_Speaker, "LLDT_REMOVE_COLLAR_PARTY")
AND
DB_IsPlayer(_Player)
THEN
ObjectSetFlag(_Player, "FTJ_RemoveSourceCollar");

IF
ObjectFlagSet("LLDT_RESURRECT_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearFlag(_Speaker, "LLDT_RESURRECT_PARTY")
AND
DB_IsPlayer(_Player)
AND
CharacterIsDead(_Player, 1)
THEN
CharacterResurrect(_Player);
CharacterSetHitpointsPercentage(_Player, 100.0);

IF
ObjectFlagSet("LLDT_FULLHEAL_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
DB_IsPlayer(_Player)
AND
CharacterIsDead(_Player, 0)
THEN
CharacterSetHitpointsPercentage(_Player, 100.0);
CharacterStatusText(_Player, "<font color='#00FF00'>Fully Healed</font>");

IF
ObjectFlagSet("LLDT_FULLHEAL_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
DB_IsPlayer(_Player)
AND
CharacterIsDead(_Player, 1)
THEN
CharacterResurrect(_Player);
CharacterStatusText(_Player, "<font color='#00FF00'>Fully Healed</font>");

IF
ObjectFlagSet("LLDT_FULLHEAL_PARTY", (CHARACTERGUID)_Speaker, _Instance)
THEN
ObjectClearFlag(_Speaker, "LLDT_FULLHEAL_PARTY");
//END_REGION

//REGION ON_OPEN
QRY
LLDT_QRY_Menu_BuildModList()
AND
NOT DB_LLDT_Menu_ModText(_)
THEN
DB_LLDT_Menu_ModText("");

QRY
LLDT_QRY_Menu_BuildModList()
AND
DB_Mods_Registered(_ModName, _Author, _Version)
AND
StringConcatenate("<b>", _ModName, _Str0)
AND
StringConcatenate(_Str0, "</b> (", _Str1)
AND
StringConcatenate(_Str1, _Version, _Str2)
AND
StringConcatenate(_Str2, ") by ", _Str3)
AND
StringConcatenate(_Str3, _Author, _Str4)
AND
StringConcatenate(_Str4, "<br>", _ModEntry)
AND
DB_LLDT_Menu_ModText(_Text)
AND
StringConcatenate(_Text, _ModEntry, _RegisteredMods)
THEN
NOT DB_LLDT_Menu_ModText(_Text);
DB_LLDT_Menu_ModText(_RegisteredMods);

IF
DialogStarted("LLDT_DebugMenu", _Instance)
AND
NOT GlobalGetFlag("LeaderLib_IsActive", 1) // LeaderLib provides its own mod list
AND
LLDT_QRY_Menu_BuildModList()
AND
DB_LLDT_Menu_ModText(_RegisteredMods)
THEN
DialogSetVariableString("LLDT_DebugMenu", "LLDT_DebugMenu_RegisteredMods_7cdc7329-d14b-452e-bfac-2e6cff9b5d50", _RegisteredMods);
NOT DB_LLDT_Menu_ModText(_RegisteredMods);

IF
DialogStarted("LLDT_PointsMenu", _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, _Player)
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 1)
THEN
DialogSetVariableStringForInstance(_Instance, "LLDT_PointsMenu_Mode_7586ca67-dad0-498d-89d2-e189800c379b", "Self");

IF
DialogStarted("LLDT_PointsMenu", _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, _Player)
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 0)
THEN
DialogSetVariableStringForInstance(_Instance, "LLDT_PointsMenu_Mode_7586ca67-dad0-498d-89d2-e189800c379b", "Self");

IF
DialogEnded("LLDT_PointsMenu", _Instance)
AND
DialogGetInvolvedPlayer(_Instance, 1, _Player)
AND
ObjectGetFlag(_Player, "LLDT_PointsMode_Party", 1)
THEN
ObjectClearFlag(_Player, "LLDT_PointsMode_Party");
//END_REGION

//REGION AVATAR_TAG
IF
ObjectFlagSet("LLDT_AVATAR_TAG_SET", (CHARACTERGUID)_Player, _Instance)
THEN
ObjectClearFlag(_Player, "LLDT_AVATAR_TAG_SET", 0);
LLDT_MakeAvatar(_Player);

/*
IF
ObjectFlagSet("LLDT_AVATAR_TAG_SET", (CHARACTERGUID)_Player, _Instance)
AND
CharacterGetReservedUserID(_Player, _UserID)
AND
GetUserProfileID(_UserID, _UserProfileID)
THEN
ObjectClearFlag(_Player, "LLDT_AVATAR_TAG_SET", 0);
LLDT_MakeAvatar(_Player);
ProcSetSelectedCharCreationPlayer(_Player, _UserProfileID);
*/

PROC
LLDT_MakeAvatar((CHARACTERGUID)_Companion)
AND
DB_CompanionAvatarBond(_Companion, (CHARACTERGUID)_Player)
THEN
NOT DB_CompanionAvatarBond(_Companion, _Player);
DB_LLDT_LastCompanionAvatarBond(_Companion, _Player);

PROC
LLDT_MakeAvatar((CHARACTERGUID)_Companion)
THEN
SetTag(_Companion, "AVATAR");

PROC
LLDT_MakeAvatar((CHARACTERGUID)_Companion)
AND
DB_CurrentLevel(_Region)
THEN
//Quest flags
ProcRegionStarted(_Region);

/*
PROC
LLDT_MakeAvatar((CHARACTERGUID)_Companion)
THEN
DB_Avatars(_Companion);
*/

IF
ObjectFlagSet("LLDT_AVATAR_TAG_CLEARED", (CHARACTERGUID)_Player, _Instance)
THEN
ObjectClearFlag(_Player, "LLDT_AVATAR_TAG_CLEARED", 0);
LLDT_MakeCompanion(_Player);
ClearTag(_Player, "AVATAR");

PROC
LLDT_MakeCompanion((CHARACTERGUID)_Companion)
AND
DB_LLDT_LastCompanionAvatarBond(_Companion, _Player)
THEN
NOT DB_LLDT_LastCompanionAvatarBond(_Companion, _Player);
DB_CompanionAvatarBond(_Companion, _Player);

PROC
LLDT_MakeCompanion((CHARACTERGUID)_Companion)
THEN
ClearTag(_Companion, "AVATAR");
//END_REGION

//REGION MOD_UPDATE
PROC
LLDT_System_UpdateAll()
THEN
LLDT_Menu_BuildSettings();
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader_DebugTools"
