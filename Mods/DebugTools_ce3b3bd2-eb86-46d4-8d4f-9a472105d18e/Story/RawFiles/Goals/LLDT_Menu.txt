Version 1
SubGoalCombiner SGC_AND
INITSECTION
DB_LLDT_Skills_All("Shout_LLDT_OpenMenu");
DB_LLDT_Skills_All("Target_LLDT_GenerateTradeTreasure");
DB_LLDT_Skills_All("Target_LLDT_ClearTradeTreasure");
DB_LLDT_Skills_All("Target_LLDT_ClearItems");
DB_LLDT_Skills_All("Target_LLDT_GenGold");
DB_LLDT_Skills_All("Target_LLDT_LevelUp");
DB_LLDT_Skills_All("Shout_LLDT_LevelUpParty");
DB_LLDT_Skills_All("Target_LLDT_TeleportSelf");
DB_LLDT_Skills_All("Target_LLDT_TeleportParty");
DB_LLDT_Skills_All("Teleportation_LLDT_TeleportTarget");

DB_LLDT_Skills_Essentials("Shout_LLDT_OpenMenu");
DB_LLDT_Skills_Essentials("Target_LLDT_GenGold");
DB_LLDT_Skills_Essentials("Target_LLDT_LevelUp");
DB_LLDT_Skills_Essentials("Shout_LLDT_LevelUpParty");
DB_LLDT_Skills_Essentials("Target_LLDT_TeleportSelf");
DB_LLDT_Skills_Essentials("Target_LLDT_TeleportParty");
DB_LLDT_Skills_Essentials("Teleportation_LLDT_TeleportTarget");

DB_LLDT_Skills_Treasure("Shout_LLDT_OpenMenu");
DB_LLDT_Skills_Treasure("Target_LLDT_GenerateTradeTreasure");
DB_LLDT_Skills_Treasure("Target_LLDT_ClearTradeTreasure");
DB_LLDT_Skills_Treasure("Target_LLDT_ClearItems");
DB_LLDT_Skills_Treasure("Target_LLDT_GenGold");

DB_LLDT_CommandFlags("LLDT_ADD_ATTRIBUTE");
DB_LLDT_CommandFlags("LLDT_ADD_ABILITY");
DB_LLDT_CommandFlags("LLDT_ADD_CIVIL");
DB_LLDT_CommandFlags("LLDT_ADD_TALENT");
DB_LLDT_CommandFlags("LLDT_ADD_ALL");
DB_LLDT_CommandFlags("LLDT_ADD_ATTRIBUTE_PARTY");
DB_LLDT_CommandFlags("LLDT_ADD_ABILITY_PARTY");
DB_LLDT_CommandFlags("LLDT_ADD_CIVIL_PARTY");
DB_LLDT_CommandFlags("LLDT_ADD_TALENT_PARTY");
DB_LLDT_CommandFlags("LLDT_ADD_ALL_PARTY");
DB_LLDT_CommandFlags("LLDT_ADD_SKILLS_MENU");
DB_LLDT_CommandFlags("LLDT_ADD_SKILLS_ESSENTIALS");
DB_LLDT_CommandFlags("LLDT_ADD_SKILLS_TREASURE");
DB_LLDT_CommandFlags("LLDT_ADD_SKILLS");
DB_LLDT_CommandFlags("LLDT_ADD_SKILLS_PARTY");
DB_LLDT_CommandFlags("LLDT_REMOVE_SKILLS");
DB_LLDT_CommandFlags("LLDT_REMOVE_SKILLS_PARTY");
KBSECTION
//REGION RESET
PROC
LLDT_Menu_ResetCommands((CHARACTERGUID)_Player)
AND
DB_LLDT_CommandFlags(_Flag)
THEN
ObjectClearFlag(_Player, _Flag);

/*
PROC
LLDT_Menu_ResetPartyCommands((CHARACTERGUID)_Player, (INTEGER)_Instance)
AND
DB_LLDT_PartyCommandFlags(_Flag)
THEN
PartyClearFlag(_Player, _Flag, _Instance);
*/
//END_REGION

//REGION POINTS
IF
ObjectFlagSet("LLDT_ADD_ATTRIBUTE", (CHARACTERGUID)_Player, _Instance)
THEN
CharacterAddAttributePoint(_Player, 1);
LLDT_Print(_Player, "+1 Attribute Point");
ObjectClearFlag(_Player, "LLDT_ADD_ATTRIBUTE");

IF
ObjectFlagSet("LLDT_ADD_ABILITY", (CHARACTERGUID)_Player, _Instance)
THEN
CharacterAddAbilityPoint(_Player, 1);
LLDT_Print(_Player, "+1 Ability Point");
ObjectClearFlag(_Player, "LLDT_ADD_ABILITY");

IF
ObjectFlagSet("LLDT_ADD_CIVIL", (CHARACTERGUID)_Player, _Instance)
THEN
CharacterAddCivilAbilityPoint(_Player, 1);
LLDT_Print(_Player, "+1 Civil Point");
ObjectClearFlag(_Player, "LLDT_ADD_CIVIL");

IF
ObjectFlagSet("LLDT_ADD_TALENT", (CHARACTERGUID)_Player, _Instance)
THEN
CharacterAddTalentPoint(_Player, 1);
LLDT_Print(_Player, "+1 Talent Point");
ObjectClearFlag(_Player, "LLDT_ADD_TALENT");

IF
ObjectFlagSet("LLDT_ADD_ALL", (CHARACTERGUID)_Player, _Instance)
THEN
CharacterAddAttributePoint(_Player, 1);
CharacterAddAbilityPoint(_Player, 1);
CharacterAddCivilAbilityPoint(_Player, 1);
CharacterAddTalentPoint(_Player, 1);
LLDT_Print(_Player, "+1 Attribute, Ability, Civil, and Talent Points");
ObjectClearFlag(_Player, "LLDT_ADD_ALL");

IF
ObjectFlagSet("LLDT_ADD_ATTRIBUTE_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearFlag(_Speaker, "LLDT_ADD_ATTRIBUTE_PARTY")
AND
DB_IsPlayer(_Player)
THEN
CharacterAddAttributePoint(_Player, 1);
LLDT_Print(_Player, "+1 Attribute Point");

IF
ObjectFlagSet("LLDT_ADD_ABILITY_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearFlag(_Speaker, "LLDT_ADD_ABILITY_PARTY")
AND
DB_IsPlayer(_Player)
THEN
CharacterAddAbilityPoint(_Player, 1);
LLDT_Print(_Player, "+1 Ability Point");

IF
ObjectFlagSet("LLDT_ADD_CIVIL_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearFlag(_Speaker, "LLDT_ADD_CIVIL_PARTY")
AND
DB_IsPlayer(_Player)
THEN
CharacterAddCivilAbilityPoint(_Player, 1);
LLDT_Print(_Player, "+1 Civil Point");

IF
ObjectFlagSet("LLDT_ADD_TALENT_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearFlag(_Speaker, "LLDT_ADD_TALENT_PARTY")
AND
DB_IsPlayer(_Player)
THEN
CharacterAddTalentPoint(_Player, 1);
LLDT_Print(_Player, "+1 Talent Point");

IF
ObjectFlagSet("LLDT_ADD_ALL_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearFlag(_Speaker, "LLDT_ADD_ALL_PARTY")
AND
DB_IsPlayer(_Player)
THEN
CharacterAddAttributePoint(_Player, 1);
CharacterAddAbilityPoint(_Player, 1);
CharacterAddCivilAbilityPoint(_Player, 1);
CharacterAddTalentPoint(_Player, 1);
LLDT_Print(_Player, "+1 Attribute, Ability, Civil, and Talent Points");
//END_REGION

//REGION DISPLAY_FLAGS
IF
ObjectFlagSet(_Flag, (CHARACTERGUID)_Player, _Instance)
AND
ObjectGetFlag(_Player, "LLDT_LOG_DISPLAYFLAGS", 1)
AND
ObjectGetFlag(_Player, _Flag, _Val)
THEN
LLDT_LogFlag(_Player, _Flag, _Val);

IF
ObjectFlagCleared(_Flag, (CHARACTERGUID)_Player, _Instance)
AND
ObjectGetFlag(_Player, "LLDT_LOG_DISPLAYFLAGS", 1)
AND
ObjectGetFlag(_Player, _Flag, _Val)
THEN
LLDT_LogFlag(_Player, _Flag, _Val);

IF
ObjectFlagSet(_Flag, (CHARACTERGUID)_Player, _Instance)
AND
ObjectGetFlag(_Player, "LLDT_LOG_PRINTFLAGS", 1)
AND
ObjectGetFlag(_Player, _Flag, _Val)
THEN
LLDT_PrintFlag(_Player, _Flag, _Val);

IF
ObjectFlagCleared(_Flag, (CHARACTERGUID)_Player, _Instance)
AND
ObjectGetFlag(_Player, "LLDT_LOG_PRINTFLAGS", 1)
AND
ObjectGetFlag(_Player, _Flag, _Val)
THEN
LLDT_PrintFlag(_Player, _Flag, _Val);
//END_REGION

//REGION LOG_SETTINGS
IF
ObjectFlagSet("LLDT_LOG_ENABLED", (CHARACTERGUID)_Player, _Instance)
THEN
SetVarFixedString(_Player, "LLDebugTools_LogText", "Log Enabled");
SetStoryEvent(_Player, "LLDT_Event_PlayerDebugLog");
//END_REGION

//REGION SKILLS
IF
ObjectFlagSet("LLDT_ADD_SKILLS_MENU", (CHARACTERGUID)_Player, _Instance)
AND
CharacterHasSkill(_Player, "Shout_LLDT_OpenMenu", 0)
THEN
CharacterAddSkill(_Player, "Shout_LLDT_OpenMenu");
ObjectClearFlag(_Player, "LLDT_ADD_SKILLS_MENU");
LLDT_Print(_Player, "[DT] Added skill Shout_LLDT_OpenMenu");

IF
ObjectFlagSet("LLDT_ADD_SKILLS_ESSENTIALS", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_SKILLS_ESSENTIALS")
AND
DB_LLDT_Skills_Essentials(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 0)
THEN
CharacterAddSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Added skill ", _Skill);

IF
ObjectFlagSet("LLDT_ADD_SKILLS_TREASURE", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_SKILLS_TREASURE")
AND
DB_LLDT_Skills_Treasure(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 0)
THEN
CharacterAddSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Added skill ", _Skill);

IF
ObjectFlagSet("LLDT_ADD_SKILLS", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_ADD_SKILLS")
AND
DB_LLDT_Skills_All(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 0)
THEN
CharacterAddSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Added skill ", _Skill);

IF
ObjectFlagSet("LLDT_ADD_SKILLS_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearFlag(_Speaker, "LLDT_ADD_SKILLS_PARTY")
AND
DB_IsPlayer(_Player)
AND
DB_LLDT_Skills_All(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 0)
THEN
CharacterAddSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Added skill ", _Skill);

IF
ObjectFlagSet("LLDT_REMOVE_SKILLS", (CHARACTERGUID)_Player, _Instance)
AND
LLDT_QRY_ClearFlag(_Player, "LLDT_REMOVE_SKILLS")
AND
DB_LLDT_Skills_All(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 1)
THEN
CharacterRemoveSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Removed skill ", _Skill);

IF
ObjectFlagSet("LLDT_REMOVE_SKILLS_PARTY", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearPartyFlag(_Speaker, "LLDT_REMOVE_SKILLS_PARTY", _Instance)
AND
DB_IsPlayer(_Player)
AND
DB_LLDT_Skills_All(_Skill)
AND
CharacterHasSkill(_Player, _Skill, 1)
THEN
CharacterRemoveSkill(_Player, _Skill);
LLDT_Print(_Player, "[DT] Removed skill ", _Skill);

//END_REGION

//REGION WAYPOINTS
PROC
LLDT_Menu_UnlockAllWaypoints((CHARACTERGUID)_Player)
AND
DB_WaypointInfo(_Item,_Trigger,_CurrentWP)
THEN
ProcDoWaypointUnlock(_Item, _Player);

PROC
LLDT_Menu_UnlockAllWaypoints((CHARACTERGUID)_Player)
THEN
//2: the button is visible, enabled, and flashes to indicate a new waypoint is available
SetHomesteadKeyState(2, _Player);

IF
ObjectFlagSet("LLDT_ADD_WAYPOINTS", (CHARACTERGUID)_Speaker, _Instance)
AND
LLDT_QRY_ClearFlag(_Speaker, "LLDT_ADD_WAYPOINTS")
AND
LLDT_QRY_Print(_Speaker, "All waypoints unlocked")
AND
DB_IsPlayer(_Player)
THEN
LLDT_Menu_UnlockAllWaypoints(_Player);

//END_REGION

IF
ObjectFlagSet("LLDT_ADD_IMMORTALITY", (CHARACTERGUID)_Player, _Instance)
THEN
CharacterSetImmortal(_Player, 1);
ObjectClearFlag(_Player, "LLDT_ADD_IMMORTALITY");

IF
ObjectFlagSet("LLDT_REMOVE_IMMORTALITY", (CHARACTERGUID)_Player, _Instance)
THEN
CharacterSetImmortal(_Player, 0);
ObjectClearFlag(_Player, "LLDT_REMOVE_IMMORTALITY");
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "ZZZ_LL_DebugTools"
